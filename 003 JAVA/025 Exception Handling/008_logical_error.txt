Yes, ‚úÖ all the exceptions shown in your examples are runtime (logical) errors in Java.

Let‚Äôs break it down:

‚∏ª

üîç What Are Runtime (Logical) Errors?
	‚Ä¢	Occur while the program is running, not during compilation.
	‚Ä¢	Code compiles successfully, but fails (throws exceptions) at execution time.
	‚Ä¢	Usually caused by logic mistakes, such as dividing by zero, accessing invalid array index, or using a null object.

‚∏ª

‚úÖ Your Examples & Their Category:

Exception	Type	Description
ArithmeticException	Runtime	Dividing by zero.
ArrayIndexOutOfBoundsException	Runtime	Invalid index access in array.
NullPointerException	Runtime	Using a null reference.
NumberFormatException	Runtime	Trying to convert non-numeric string to number.
ClassNotFoundException	Checked	Requires handling or declaring, but thrown at runtime.
FileNotFoundException	Checked	Must be handled using try-catch or throws. Checked at compile-time.
IOException	Checked	General I/O failures ‚Äî compile-time enforced handling.


‚∏ª

üß† Summary:
	‚Ä¢	Unchecked Exceptions = Runtime errors (subclass of RuntimeException)
	‚Ä¢	Checked Exceptions = Still runtime in behavior, but must be declared or caught

‚∏ª

Let me know if you want a table showing compile-time vs runtime errors too.